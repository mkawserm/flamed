// Code generated by protoc-gen-go. DO NOT EDIT.
// source: graphql.proto

package graphql

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GraphQLRequest struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphQLRequest) Reset()         { *m = GraphQLRequest{} }
func (m *GraphQLRequest) String() string { return proto.CompactTextString(m) }
func (*GraphQLRequest) ProtoMessage()    {}
func (*GraphQLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ce0fc368bdc1a51, []int{0}
}

func (m *GraphQLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphQLRequest.Unmarshal(m, b)
}
func (m *GraphQLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphQLRequest.Marshal(b, m, deterministic)
}
func (m *GraphQLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphQLRequest.Merge(m, src)
}
func (m *GraphQLRequest) XXX_Size() int {
	return xxx_messageInfo_GraphQLRequest.Size(m)
}
func (m *GraphQLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphQLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GraphQLRequest proto.InternalMessageInfo

func (m *GraphQLRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type GraphQLResponse struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphQLResponse) Reset()         { *m = GraphQLResponse{} }
func (m *GraphQLResponse) String() string { return proto.CompactTextString(m) }
func (*GraphQLResponse) ProtoMessage()    {}
func (*GraphQLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ce0fc368bdc1a51, []int{1}
}

func (m *GraphQLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphQLResponse.Unmarshal(m, b)
}
func (m *GraphQLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphQLResponse.Marshal(b, m, deterministic)
}
func (m *GraphQLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphQLResponse.Merge(m, src)
}
func (m *GraphQLResponse) XXX_Size() int {
	return xxx_messageInfo_GraphQLResponse.Size(m)
}
func (m *GraphQLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphQLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GraphQLResponse proto.InternalMessageInfo

func (m *GraphQLResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*GraphQLRequest)(nil), "graphql.GraphQLRequest")
	proto.RegisterType((*GraphQLResponse)(nil), "graphql.GraphQLResponse")
}

func init() { proto.RegisterFile("graphql.proto", fileDescriptor_3ce0fc368bdc1a51) }

var fileDescriptor_3ce0fc368bdc1a51 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2f, 0x4a, 0x2c,
	0xc8, 0x28, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xb4, 0xb8,
	0xf8, 0xdc, 0x41, 0xcc, 0x40, 0x9f, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x09, 0x2e,
	0xf6, 0x82, 0xc4, 0xca, 0x9c, 0xfc, 0xc4, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x9e, 0x20, 0x18,
	0x57, 0x49, 0x9b, 0x8b, 0x1f, 0xae, 0xb6, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0xb7, 0x62, 0xa3,
	0x70, 0x2e, 0x2e, 0x98, 0xe2, 0x00, 0x67, 0x21, 0x4f, 0x2e, 0x21, 0xf7, 0xd4, 0x12, 0x74, 0xdd,
	0xe2, 0x7a, 0x30, 0x57, 0xa1, 0xba, 0x41, 0x4a, 0x02, 0x53, 0x02, 0xa2, 0x45, 0x89, 0x21, 0x89,
	0x0d, 0xec, 0x03, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0x48, 0xf3, 0x0c, 0xd2, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GraphQLRPCClient is the client API for GraphQLRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GraphQLRPCClient interface {
	GetGraphQLResponse(ctx context.Context, in *GraphQLRequest, opts ...grpc.CallOption) (*GraphQLResponse, error)
}

type graphQLRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewGraphQLRPCClient(cc grpc.ClientConnInterface) GraphQLRPCClient {
	return &graphQLRPCClient{cc}
}

func (c *graphQLRPCClient) GetGraphQLResponse(ctx context.Context, in *GraphQLRequest, opts ...grpc.CallOption) (*GraphQLResponse, error) {
	out := new(GraphQLResponse)
	err := c.cc.Invoke(ctx, "/graphql.GraphQLRPC/GetGraphQLResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GraphQLRPCServer is the server API for GraphQLRPC service.
type GraphQLRPCServer interface {
	GetGraphQLResponse(context.Context, *GraphQLRequest) (*GraphQLResponse, error)
}

// UnimplementedGraphQLRPCServer can be embedded to have forward compatible implementations.
type UnimplementedGraphQLRPCServer struct {
}

func (*UnimplementedGraphQLRPCServer) GetGraphQLResponse(ctx context.Context, req *GraphQLRequest) (*GraphQLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGraphQLResponse not implemented")
}

func RegisterGraphQLRPCServer(s *grpc.Server, srv GraphQLRPCServer) {
	s.RegisterService(&_GraphQLRPC_serviceDesc, srv)
}

func _GraphQLRPC_GetGraphQLResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GraphQLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphQLRPCServer).GetGraphQLResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphql.GraphQLRPC/GetGraphQLResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphQLRPCServer).GetGraphQLResponse(ctx, req.(*GraphQLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GraphQLRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "graphql.GraphQLRPC",
	HandlerType: (*GraphQLRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGraphQLResponse",
			Handler:    _GraphQLRPC_GetGraphQLResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "graphql.proto",
}
